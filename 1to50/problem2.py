##############
# Problem 2: ###################################################################################################################################
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: #
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...                                                                                             ###########
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. #
######################################################################################################################################

def even_fibonacci(lower_bound, upper_bound):
    terms = [0, lower_bound]
    next_value = terms[-1] + terms[-2]
    even_values = []

    while next_value <= upper_bound:
        terms.append(next_value)
        next_value = terms[-1] + terms[-2]
        last_value = terms[-1]

        if last_value % 2 == 0:
            even_values.append(last_value)

    return even_values

even_terms = even_fibonacci(1, 4000000)
print sum(even_terms)
